### TYPES ###
type Department {
  name: String!
}

type User {
  oneBankId: String!
}

type Experiment implements Identity {
  startDate: DateTime!
  endDate: DateTime!
}

type Variant implements Identity {
  status: Status!
}

type Schedule implements Identity {
  groupId: Int
}

## INTERFACES ##
interface Identity {
  id: String!
  name: Stirng!
}

### INPUTS ###
input ExperimentVariantId {
  experimentId: String
  variantId: String
}

### ENUMS ###
enum Entities {
  Department
  User
  Experiment
  Variant
}

enum Relations {
  OWNS
  OWNED_BY
  CREATED_BY
  CONTAINS
  BELONGS_TO
  PARENT_OF
  CHILD_OF
}

enum Status {
  DRAFT
  LIVE
  PAUSED
  STOPPED
  ARCHIVED
}

### QUERIES ###
type Query {
  helloWorld: String
  getPerson(id: Int!): Person

  #Reccomendations
  movieRatingCountRec(
    movieName: String!
    limit: Int
  ): [MovieRatingCountRecResult]
  userGenreMovieCountRec(
    userName: String!
    limit: Int
  ): [UserGenreMovieCountRecResult]
}

### MUTATIONS ###
type Mutation {
  createDepartment(personInput: PersonInput!): Experiment!
  createUser(personInput: PersonInput!): Experiment!
  createExperiment(personInput: PersonInput!): Experiment!
  createVariant(personInput: PersonInput!): Experiment!
}
